// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Not(in=reset, out=notreset);
    Not(in=load, out=notload);
    Not(in=inc, out=notinc);
    And(a=notreset, b=load, out=s00);
    And(a=notreset, b=notload, out=s010);
    And(a=s010, b=notinc, out=s01);
    And(a=notreset, b=notload, out=s100);
    And(a=s100, b=inc, out=s10);
    Or(a=s00, b=s01, out=sel0);
    Or(a=s10, b=s01, out=sel1);

    Register(in=i, load=true, out=o, out=out);
    Inc16(in=o, out=incout);
    Mux4Way16(a=false, b=in, c=incout, d=o, sel[0]=sel0, sel[1]=sel1, out=i);
}
